CB is an experimental reasoner for ontologies based
on a new kind of "consequence-based" reasoning procedure.

Currently CB supports a fragment of OWL which corresponds
to the DL Horn-SHIF.  


I. Installation

In order to compile the program from sources, you will need
to have a suitable ocaml installation v.3.10 or later wich
is bundled with ocamlbuild. You also need make tools if to use 
make file. Given these, to compile the program, just issue

make

if successful, this will create an executable cb in ./bin 
directory. This executable can be consequently copied in any
convenient location.


II. Usage

For the usage options type:

./cb --help     [on Linux & Mac]
  cb --help     [on Windows]

For displaying progress bars, CB uses ANSI codes. 
Please use an ansi-capable terminal for optimal results.

Example:

./cb -c -o galen_tax.owl galen.owl

will load the ontology from file "galen.owl", classifies it,
and output the sorted taxonomy into the file "galen_tax.owl"


III. Syntax

Currently CB can read ontologies in OWL 2 founctional-style
syntax and supports a subsets of the constructors corresponding
to Horn SHIF language. At the moment CB does not support assertions
or datatypes and will ignore any of these constructors.

For the description of OWL 2 functional-style syntax, see:
http://www.w3.org/TR/owl2-syntax/


IV. Conversion.

If you have an owl file [ontology.owl] in OWL or OWL 2 XML RDF syntax,
you can convert it into a functional syntax using Protege 4.
For this, the ontology [ontology.owl] should be loaded into Protege 4
and saved using menu File > Save as... > OWL Functional Syntax. 

Note that some versions of Protege 4 produce outdated OWL 2 syntax
and the result may reqire manual editing
(OWL 2 is still being standardazied and therefore subject to changes).
Alternatively, you could build the version of Protege 4 that uses
the most recent OWL api from the sources:
http://smi-protege.stanford.edu/repos/protege/protege4/protege-standalone/branches/protege4_1_port


V. Horn ontologies.

Currently the algorithm implemented in CB is complete only for Horn-SHIF 
ontologies.The reasoner will still work for (full) SHIF ontologies, but 
it is not guaranteed to produce all subsumption relations.

    An ontology is Horn if:

    * It does not contain "ObjectUnionOf" positively, e.g., 
      within a class expressions C in the following axioms and their synonyms:
      
      EquivalentClasses(C D)
      EquivalentClasses(D C)
      SubClassOf(D C)

    * It does not contain "ObjectComplementOf" and "ObjectAllValuesFrom" 
      negatively, e.g., within a class expressions C in the following axioms 
      and their synonyms:
 
      EquivalentClasses(C D)
      EquivalentClasses(D C)
      SubClassOf(C D)

    The reasoner will issue a warning if the ontology is not Horn.
    Please print the statistics for ontology to find out the reasons why 
    ontology is not Horn:

    ./cb -i ontology.owl  [Linux & Mac]
      cb -i ontology.owl  [Windows]
